name: Push a Python package to Azure Artifacts
on:
  push:
    branches:
      - develop
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: '${{ secrets.PERSONAL_ACCESS_TOKEN }}'
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Testing pre-build code with pytest
      run: |
        pytest lib_template/
    - name: Install library
      run: |
        python setup.py install
    - name: Test after installing library
      run: |
        pytest .
    - name: Generate binary distribution
      run: |
        python setup.py sdist
        python setup.py bdist_wheel
    - name: Generate binary distribution
      run: |
        python -m twine upload -r <organizationName> dist/*
        python -m twine upload -r feedName --config-file $(PYPIRC_PATH) dist/*.whl
    - name: Build and push docker images to docker registry
      uses: azure/docker-login@v1 
      with:
        login-server: <docker registry name goes here.>
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
      run: |
        docker build . -t <docker registry name goes here.>/<docker image name>:${{ github.sha }}
        docker push <docker registry name goes here.>/<docker image name>:${{ github.sha }}
        docker build . -t <docker registry name goes here.>/<docker image name>:latest
        docker push <docker registry name goes here.>/<docker image name>:latest
    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: <docker registry name goes here.>/<docker image name>:${{ github.sha }}
        args: --file=Dockerfile
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: snyk.sarif